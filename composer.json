{
	"name": "eliashaeussler/typo3-warming",
	"description": "Extension for TYPO3 CMS that warms up Frontend caches based on an XML sitemap with multi-language support",
	"license": "GPL-2.0-or-later",
	"type": "typo3-cms-extension",
	"authors": [
		{
			"name": "Elias Häußler",
			"email": "elias@haeussler.dev",
			"homepage": "https://haeussler.dev",
			"role": "Maintainer"
		}
	],
	"support": {
		"issues": "https://github.com/eliashaeussler/typo3-warming/issues",
		"chat": "https://typo3.slack.com/archives/C0400CSGWAY",
		"source": "https://github.com/eliashaeussler/typo3-warming.git",
		"docs": "https://docs.typo3.org/p/eliashaeussler/typo3-warming/main/en-us/",
		"rss": "https://github.com/eliashaeussler/typo3-warming/releases.atom"
	},
	"require": {
		"php": ">= 7.1 < 8.2",
		"ext-json": "*",
		"eliashaeussler/cache-warmup": ">= 0.4.0 < 0.9.0",
		"guzzlehttp/guzzle": ">= 6.3.0 < 8.0.0",
		"guzzlehttp/psr7": ">= 1.4.0 < 3.0.0",
		"psr/http-message": "^1.0",
		"psr/log": "^1.0",
		"symfony/console": ">= 4.0 < 6.0",
		"symfony/polyfill-php80": "^1.23",
		"symfony/polyfill-php81": "^1.26",
		"symfony/serializer": ">= 4.0 < 6.0",
		"typo3/cms-backend": "~10.4.0 || ~11.5.0",
		"typo3/cms-core": "~10.4.0 || ~11.5.0",
		"typo3/cms-extbase": "~10.4.0 || ~11.5.0",
		"typo3/cms-fluid": "~10.4.0 || ~11.5.0"
	},
	"require-dev": {
		"armin/editorconfig-cli": "^1.5",
		"captainhook/plugin-composer": "^5.3",
		"dg/bypass-finals": "^1.3",
		"ergebnis/composer-normalize": "^2.17",
		"helhum/typo3-console": ">= 6.3.2 < 8.0",
		"helmich/typo3-typoscript-lint": "^2.5",
		"jangregor/phpstan-prophecy": "^1.0",
		"phpspec/prophecy-phpunit": "^2.0",
		"phpstan/phpstan": "^1.6",
		"phpstan/phpstan-phpunit": "^1.0",
		"phpstan/phpstan-symfony": "^1.2",
		"phpunit/phpcov": "^8.2",
		"saschaegerer/phpstan-typo3": "^1.1",
		"typo3/coding-standards": "^0.5.0",
		"typo3/testing-framework": "^6.15"
	},
	"autoload": {
		"psr-4": {
			"EliasHaeussler\\Typo3Warming\\": "Classes/"
		}
	},
	"autoload-dev": {
		"psr-4": {
			"EliasHaeussler\\Typo3Warming\\Tests\\": "Tests/"
		},
		"classmap": [
			"Tests/Build/Stubs/TYPO3/PharStreamWrapper"
		]
	},
	"config": {
		"allow-plugins": {
			"captainhook/plugin-composer": true,
			"ergebnis/composer-normalize": true,
			"typo3/class-alias-loader": true,
			"typo3/cms-composer-installers": true
		},
		"bin-dir": ".Build/bin",
		"sort-packages": true,
		"vendor-dir": ".Build/vendor"
	},
	"extra": {
		"typo3/cms": {
			"extension-key": "warming",
			"web-dir": ".Build/web"
		}
	},
	"scripts": {
		"post-autoload-dump": [
			"@environment:prepare"
		],
		"docs": [
			"@docs:cleanup",
			"@docs:build",
			"@docs:open"
		],
		"docs:build": "docker-compose run --rm docs",
		"docs:cleanup": "rm -rf .Build/docs",
		"docs:open": "open .Build/docs/Result/project/0.0.0/Index.html",
		"environment:prepare": [
			"@environment:prepare:extension",
			"@environment:prepare:typo3"
		],
		"environment:prepare:extension": [
			"mkdir -p .Build/web/typo3conf/ext/",
			"[ -L .Build/web/typo3conf/ext/warming ] || ln -snvf ../../../../. .Build/web/typo3conf/ext/warming"
		],
		"environment:prepare:typo3": [
			"typo3cms install:setup --no-interaction --force --install-steps-config Tests/Build/Installation/install-steps.yaml"
		],
		"lint": [
			"@lint:composer",
			"@lint:editorconfig",
			"@lint:php",
			"@lint:typoscript"
		],
		"lint:composer": "@composer normalize --no-check-lock --no-update-lock",
		"lint:editorconfig": "ec --finder-config .editorconfig-lint.php --fix",
		"lint:php": "php-cs-fixer fix",
		"lint:typoscript": "typoscript-lint -c typoscript-lint.yml",
		"sca": [
			"@sca:php"
		],
		"sca:php": "phpstan analyse -c phpstan.neon",
		"test": [
			"@test:functional",
			"@test:unit"
		],
		"test:ci": [
			"@test:ci:functional",
			"@test:ci:unit"
		],
		"test:ci:functional": "phpunit -c phpunit.ci.functional.xml",
		"test:ci:merge": "phpcov merge --html .Build/log/coverage/html/_merged --clover .Build/log/coverage/clover.xml --text php://stdout .Build/log/coverage/php",
		"test:ci:unit": "phpunit -c phpunit.ci.unit.xml",
		"test:functional": "phpunit -c phpunit.functional.xml",
		"test:unit": "phpunit -c phpunit.unit.xml"
	}
}
